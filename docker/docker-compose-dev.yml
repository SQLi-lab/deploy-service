version: "3.8"

services:
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    container_name: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  dramatiq:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: dramatiq
    restart: always
    command: dramatiq api.tasks --processes 4 --skip-logging
    depends_on:
      - redis
    env_file:
      - ../.env.example

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080" включение дашборда Traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - TRAEFIK_LOG_LEVEL=INFO
    labels:
      - "traefik.http.routers.api.rule=PathPrefix(`/dashboard`))"


